<<map, results='hide'>>=
    tikz(sprintf("%s/map.tex", figuresDir), width=1.5*inlinePlotWidth, height=inlinePlotHeight, pointsize=10)
    US.counties = readOGR(dsn="../Maps/cb_2016_us_county_5m",layer="cb_2016_us_county_5m")
    US.counties = US.counties[US.counties$STATEFP == "09",]
    county.data = US.counties@data %>%
        mutate(id=rownames(.)) %>%
        data.table() %>%
        mutate(highRSV=ifelse(NAME %in% lowIncidenceCounties, FALSE, TRUE))

    map.df = US.counties %>% 
        fortify() %>% 
        data.table() %>%
        inner_join(county.data %>% select(highRSV, id), by="id")
        
    county.data = map.df %>%
        group_by(id) %>%
        summarize(lat=mean(range(lat)), long=mean(range(long))) %>%
        ungroup() %>%
        inner_join(county.data, by="id") %>%
        rename(name=NAME)

    ggplot(map.df, aes(x=long, y=lat)) +
        theme_light(base_size=plotTextBaseSize) +
        scale_fill_manual(labels=legendLabels(c("$<300,000$", "$>900,000$")), values=c(lightBlue, darkBlue)) +
        geom_polygon(aes(fill=highRSV, group=group), color="white", size=.5) +
        geom_text(data=county.data, aes(label=name), size=2.2) +
        coord_map() + 
        labs(fill="Total county population in 2010 census") +
        theme(
            rect=element_blank(),
            line=element_blank(),
            axis.text=element_blank(),
            axis.title=element_blank(),
            legend.position="bottom"
        )
    dev.off()
@

<<seasonByRegion, results='hide'>>=
    tikz(sprintf("%s/seasonByRegion.tex", figuresDir), width=inlinePlotWidth, height=inlinePlotHeight, pointsize=10)
    onOffLevels = c("onset", "offset")
    
    data = thresholdsByCounty %>% 
        filter(county %in% countiesForPlots) %>%
        melt(id=c("county")) %>%
        cSplit(c("variable"), c(".")) %>%
        rename(variable=variable_1, pctile=variable_2) %>%
        mutate(variable=factor(variable, levels=onOffLevels)) %>%
        cast(county + variable ~ pctile)
        
    onsetOffsetRange = 6 # weeks
    onsetOffsetAdjust = data.frame(variable=factor(c("onset", "offset"), levels=onOffLevels), nudge=c(-1, -2))
        
    limits = data %>% 
        select(variable, median) %>%
        group_by(variable) %>%
        summarize(mid=round(mean(range(median)))) %>%
        inner_join(onsetOffsetAdjust, by="variable") %>%
        mutate(mid=mid + nudge, min=mid - onsetOffsetRange / 2, max=mid + onsetOffsetRange / 2)
        
    monthBarY = 0.7 + (0.5 - 5.5) * 0.04
    monthGrob = function(month) {
        textGrob(epiWeekLabels[month], just="right", gp=gpar(fontsize="6.4", col="grey30"))
    }
        
    plot = ggplot(data) +
        theme_light(base_size=plotTextBaseSize) +
        geom_errorbarh(aes(xmin=lower, xmax=upper, y=county), height=.1) + 
        geom_point(aes(x=median, y=county), size=.75) + 
        geom_blank(data=limits, aes(x=min)) + 
        geom_blank(data=limits, aes(x=max)) + 
        labs(aes(y=variable)) +
        facet_wrap(~variable, ncol=2, scales="free_x", labeller=onsetOffsetLabeller) +
        scale_y_discrete(labels=countyLabels, limits=rev(unique(data$county))) + 
        scale_x_continuous(breaks=seq(0, 52, 2), minor_breaks=seq(1, 52)) + 
        labs(x=NULL) + 
        annotation_custom(monthGrob(4), ymin=monthBarY, ymax=monthBarY, xmin=monthBoundaries$mid[4], xmax=monthBoundaries$mid[4]) + 
        annotation_custom(monthGrob(5), ymin=monthBarY, ymax=monthBarY, xmin=monthBoundaries$mid[5], xmax=monthBoundaries$mid[5]) + 
        annotation_custom(monthGrob(9), ymin=monthBarY, ymax=monthBarY, xmin=monthBoundaries$mid[9], xmax=monthBoundaries$mid[9]) + 
        annotation_custom(monthGrob(10), ymin=monthBarY, ymax=monthBarY, xmin=monthBoundaries$mid[10], xmax=monthBoundaries$mid[10]) + 
        theme(
            panel.grid.major.x=element_line(size=rel(2)),
            panel.grid.minor.x=element_line(size=rel(2)),
            panel.grid.major.y=element_blank(),
            axis.title.y=element_blank(),
            axis.ticks.y=element_blank(),
            axis.text.y=element_text(hjust=1)
        )

	  plotGrob = ggplotGrob(plot)
	  plotGrob$layout$clip[grepl("panel", plotGrob$layout$name)] <- "off"
	  grid.draw(plotGrob)

    dev.off()
@

<<coverageByRegionAAP, results='hide'>>=
    tikz(sprintf("%s/coverageByRegionAAP.tex", figuresDir), width=inlinePlotWidth, height=inlinePlotHeight, pointsize=10)
    
    data = unprotectedByCounty %>% 
        filter(strat=="aap", rounding==0) %>% 
        filter(county %in% countiesForPlots)
    
    ggplot(data) +
        theme_light(base_size=plotTextBaseSize) +
        geom_errorbar(aes(ymax=frac.upper, ymin=frac.lower, x=county), width=.1) + 
        geom_point(aes(y=frac.median, x=county), size=.75) + 
        scale_y_continuous(labels=latexPercent, limits=c(0.88, 1), breaks=seq(0, 1, by=0.04), expand=c(0.05, 0)) +
        scale_x_discrete(labels=countyLabelsShort) + 
        labs(y="Preventable fraction") +
        theme(
            panel.grid.major.x=element_blank(),
            axis.title.x=element_blank(),
            axis.ticks.x=element_blank(),
            axis.text.x=element_text(angle=30, hjust=0.5, vjust=0.5)
        )

    dev.off()
@

<<coverageByRegionAAPInsight, results='hide'>>=
    tikz(sprintf("%s/coverageByRegionAAPInsight.tex", figuresDir), width=pagePlotWidth, height=pagePlotHeight, pointsize=10)

    strat = ppxFixedStrategies("all")[["aap"]]
    
    data = predByCounty %>%
	    filter(county %in% countiesForPlots)

    thresholds = data %>%
    	mutate(ppx=strat(time)) %>%
    	filter(ppx > 0) %>%
    	group_by(county) %>%
    	do(
    		data.frame(
    			ppx.start=min(.$time),
    			ppx.end=max(.$time),
    			unprotected.start=min(.$rsv.cum.fit),
    			unprotected.end=max(.$rsv.cum.fit)
    		)
    	) %>%
    	ungroup() %>%
    	as.data.frame() %>%
    	inner_join(thresholdsByCounty, by="county")
    	
    barYmin = 0.025
    barYmax = 0.075
    
    spanExtents = data.frame(
        variable=c("ppx", "season"), 
        barYmin=c(1 + barYmin, -barYmax), 
        barYmax=c(1 + barYmax, -barYmin), 
        lineYmin=c(0, -barYmin), 
        lineYmax=c(1 + barYmin, 1)
    )
    	
    spans = thresholds %>%
        select(county, matches("ppx."), matches(".median")) %>%
        rename(season.start=onset.median, season.end=offset.median) %>%
        melt(id.vars="county") %>%
        cSplit("variable", ".") %>%
        rename(variable=variable_1, part=variable_2) %>%
        cast(county + variable ~ part) %>%
        right_join(spanExtents, by="variable")
        
    spanLabels = legendLabels(c("AAP-recommended prophylaxis", "RSV season"), leading=1)
    	
    ggplot(data) +
        theme_light(base_size=plotTextBaseSize) +
        geom_ribbon(aes(ymin=rsv.cum.fit.lower, ymax=rsv.cum.fit.upper, x=time), fill=grey(.25)) +
    	  geom_segment(aes(x=start, y=lineYmin, xend=start, yend=lineYmax, color=variable), data=spans, size=.375) + 
    	  geom_segment(aes(x=end, y=lineYmin, xend=end, yend=lineYmax, color=variable), data=spans, size=.375) + 
    	  geom_rect(aes(xmin=start, ymin=barYmin, xmax=end, ymax=barYmax, fill=variable, color=variable), data=spans, size=.375) + 
    	  geom_segment(aes(x=-Inf, y=unprotected.start, xend=ppx.start, yend=unprotected.start), linetype="11", data=thresholds, size=.375) + 
        geom_segment(aes(x=-Inf, y=unprotected.end, xend=ppx.end, yend=unprotected.end), linetype="11", data=thresholds, size=.375) + 
        geom_point(aes(x=min(monthBoundaries$min), y=unprotected.end), data=thresholds, shape=18) + 
        geom_point(aes(x=min(monthBoundaries$min), y=unprotected.start), data=thresholds, shape=18) + 
        scale_y_continuous(labels=latexPercent, breaks=seq(0, 1, by=.25), limits=c(-0.1, 1.1), expand=c(0, 0)) +
        scale_x_continuous(breaks=monthBoundaries$mid, labels=epiWeekLabels, limits=range(c(monthBoundaries$min, monthBoundaries$max)), expand=c(0, 0)) + 
        scale_color_manual(labels=spanLabels, values=c(darkPurple, darkRed)) +
        scale_fill_manual(labels=spanLabels, values=c(darkPurple, darkRed)) +
        guides(color=guide_legend(keywidth=3, keyheight=.4)) + 
        facet_wrap(~county, ncol=5, labeller=labeller(county=countyLabels)) +
        labs(x=NULL, y="Cumulative indicence fraction") + 
        theme(
            panel.grid.major.x=element_blank(),
            panel.grid.minor.x=element_blank(),
            legend.title=element_blank(),
            axis.title.y=element_blank(),
            axis.ticks.x=element_blank(),
            axis.text.x=element_text(angle=90, hjust=0.5, vjust=0.5),
            legend.position="bottom"
        )
    
    dev.off()
@

<<coverageByRegion, results='hide', warning=FALSE>>=
    GeomErrorbar$draw_key = draw_key_vline_small

    tikz(sprintf("%s/coverageByRegionRegimen.tex", figuresDir), width=pagePlotWidth, height=pagePlotHeight * 1.5, pointsize=10)
    data = unprotectedByCounty %>% 
        filter(county %in% countiesForPlots, rounding==0, sliding==FALSE) %>%
        mutate(strat=factor(strat, levels=c(levels(strat)[1], "_1", "_2", levels(strat)[2:7])))

    ggplot(data) +
        theme_light(base_size=plotTextBaseSize) +
        scale_y_continuous(labels=latexPercent, limits=c(0.9, 1), breaks=seq(0, 1, by=.02), expand=c(0.05, 0)) +
        scale_color_manual(
          name="Prophylaxis regimen", 
          labels=legendLabels(c(as.vector(stratLabels[10]), "_1", "_2", as.vector(stratLabels[1:6]))),
          values=c(
            darkPurple, 
            NA, NA, 
            rep(c(darkBrown, darkOrange), each=3), darkPurple
          ), 
          drop=FALSE
        ) + 
        scale_shape_manual(
          name="Prophylaxis regimen", 
          labels=legendLabels(c(as.vector(stratLabels[10]), "_1", "_2", as.vector(stratLabels[1:6]))),
          values=c(
            16, 
            16, 16, 
            16, 15, 17, 
            16, 15, 17
          ), 
          drop=FALSE
        ) + 
        geom_errorbar(
            aes(ymin=frac.lower, ymax=frac.upper, x=county, color=strat, group=strat), 
            width=.3, 
            position=position_dodge(.5)
        ) + 
        geom_point(aes(y=frac.median, x=county, color=strat, shape=strat), position=position_dodge(.5), size=.75) +
        labs(y="Preventable fraction", color="Prophylaxis regimen") +
        guides(color=guide_legend(keywidth=1, keyheight=1.5, ncol=3)) + 
        scale_x_discrete(labels=countyLabels) + 
        theme(
            axis.title.x=element_blank(),
            axis.ticks.x=element_blank(),
            legend.position="bottom"
        )
    dev.off()
@

<<coverageByRounding, results='hide', warning=FALSE>>=
    tikz(sprintf("%s/coverageByRoundingRegimen.tex", figuresDir), width=pagePlotWidth, height=pagePlotHeight * 1.5, pointsize=10)

    # We are going to de-emphasize some data points, because sometimes different strategies under different rounding end up producing the same prophylaxis schedule, and there is no point in showing all of them equally on the plot. To do this, we consider the left-to-right order in which strategies will appear in the plot, and then de-emphasize any strategy whose schedule is the same as some strategy that appears on its left
    data = unprotectedByCounty %>% 
        filter(county == "all", sliding==FALSE) %>%
        arrange(rounding, strat) %>%
        mutate(strat=factor(strat, levels=c(levels(strat)[1], "_1", "_2", levels(strat)[2:7])))

    data$startIdx = match(data$desc, data$desc)
    data$isRepeat = data$startIdx != seq(1, length(data$startIdx))
    data$isRepeat = data$isRepeat & !data$strat == "aap" 
    data$strat.isRepeat = sprintf("%s.%s", data$strat, data$isRepeat)
    idx = order(rep(seq(1, length(levels(data$strat))), 2))
    strat.isRepeat.levels = (c(
      sprintf("%s.%s", levels(data$strat), FALSE), 
      sprintf("%s.%s", levels(data$strat), TRUE)
    ))[idx]
    data$strat.isRepeat = factor(data$strat.isRepeat, strat.isRepeat.levels)
    
    ggplot(data) +
        theme_light(base_size=plotTextBaseSize) +
        scale_y_continuous(labels=latexPercent, limits=c(0.90, 1.00), breaks=seq(0, 1, by=.02), expand=c(0.05, 0)) +
        scale_alpha_manual(guide=FALSE, breaks=c(FALSE, TRUE), values=c(1, 0.5)) + 
        scale_color_manual(
          name="Prophylaxis regimen", 
          breaks=factor(sprintf("%s.%s", levels(data$strat), FALSE), levels=strat.isRepeat.levels),
          labels=legendLabels(c(as.vector(stratLabels[10]), "_1", "_2", as.vector(stratLabels[1:6])), trailing=0),
          values=c(
            darkPurple, darkPurple, 
            NA, NA, NA, NA, 
            rep(c(darkBrown, darkOrange), each=6)
          ), 
          drop=FALSE
        ) + 
        scale_shape_manual(
          name="Prophylaxis regimen", 
          breaks=factor(sprintf("%s.%s", levels(data$strat), FALSE), levels=strat.isRepeat.levels),
          labels=legendLabels(c(as.vector(stratLabels[10]), "_1", "_2", as.vector(stratLabels[1:6])), trailing=0),
          values=c(
            16, 16, 
            16, 16, 16, 16, 
            16, 21, 15, 22, 17, 24, 
            16, 21, 15, 22, 17, 24
          ), 
          drop=FALSE
        ) + 
        scale_x_discrete(labels=roundingLabels) + 
        geom_errorbar(
            aes(ymin=frac.lower, ymax=frac.upper, x=rounding, color=strat.isRepeat, group=strat.isRepeat), 
            width=.25, 
            position=position_dodge(.5)
        ) + 
        geom_point(aes(y=frac.median, x=rounding, color=strat.isRepeat, shape=strat.isRepeat), position=position_dodge(.5), size=0.75, fill="white") +
        labs(x="Calendrical rounding", y="Preventable fraction") +
        theme(
            legend.position="bottom",
            legend.key=element_rect(fill="white"),
        ) +
        guides(color=guide_legend(keywidth=1, keyheight=1.5, ncol=3))
    dev.off()
@

<<coverageByRegionWithSliding, results='hide', warning=FALSE>>=
    tikz(sprintf("%s/coverageByRegionRegimenWithSliding.tex", figuresDir), width=pagePlotWidth, height=pagePlotHeight * 1.5, pointsize=10)
    data = unprotectedByCounty %>% 
        filter(county %in% countiesForPlots, rounding==0, !grepl("county", strat)) %>%
        mutate(strat=factor(strat, levels=c(levels(strat)[1], "_1", "_2", levels(strat)[2:4], levels(strat)[8:10])))

    ggplot(data) +
        theme_light(base_size=plotTextBaseSize) +
        scale_y_continuous(labels=latexPercent, limits=c(0.9, 1), breaks=seq(0, 1, by=.02), expand=c(0.05, 0)) +
        scale_color_manual(
          name="Prophylaxis regimen", 
          labels=legendLabels(c(as.vector(stratLabels[10]), "_1", "_2", as.vector(stratLabels[1:3]), as.vector(stratLabels[7:9]))),
          values=c(
            darkPurple, 
            NA, NA, 
            rep(c(darkBrown, darkGreen), each=3), darkPurple
          ), 
          drop=FALSE
        ) + 
        scale_shape_manual(
          name="Prophylaxis regimen", 
          labels=legendLabels(c(as.vector(stratLabels[10]), "_1", "_2", as.vector(stratLabels[1:3]), as.vector(stratLabels[7:9]))),
          values=c(
            16, 
            16, 16, 
            16, 15, 17, 
            16, 15, 17
          ), 
          drop=FALSE
        ) + 
        geom_errorbar(
            aes(ymin=frac.lower, ymax=frac.upper, x=county, color=strat, group=strat), 
            width=.3, 
            position=position_dodge(.5)
        ) + 
        geom_point(aes(y=frac.median, x=county, color=strat, shape=strat), position=position_dodge(.5), size=.75) +
        labs(y="Preventable fraction") +
        guides(color=guide_legend(keywidth=1, keyheight=1.5, ncol=3)) + 
        scale_x_discrete(labels=countyLabels) + 
        theme(
            axis.title.x=element_blank(),
            axis.ticks.x=element_blank(),
            legend.position="bottom"
        )
    dev.off()
@

<<onsetOffsetByYear, results='hide', warning=FALSE>>=
    tikz(sprintf("%s/onsetOffsetByYear.tex", figuresDir), width=inlinePlotWidth, height=inlinePlotHeight, pointsize=10)
    data = stateThresholdsByWindow %>% 
        melt(id=c("epiyear")) %>%
        cSplit(c("variable"), c(".")) %>%
        rename(variable=variable_1, pctile=variable_2) %>%
        mutate(variable=factor(variable, levels=onOffLevels)) %>%
        cast(epiyear + variable ~ pctile)
        
    onsetOffsetAdjust = data.frame(variable=factor(c("onset", "offset"), levels=onOffLevels), nudge=c(0, -1))

    limits = data %>% 
        select(variable, median) %>%
        group_by(variable) %>%
        summarize(mid=round(mean(range(median)))) %>%
        inner_join(onsetOffsetAdjust, by="variable") %>%
        mutate(mid=mid + nudge) %>%
        mutate(min=mid - onsetOffsetRange / 2, max=mid + onsetOffsetRange / 2)

    monthBarY = 1998.5 + (1998.5 - 2013.5) * 0.04

    plot = ggplot(data) +
        theme_light(base_size=plotTextBaseSize) +
        geom_errorbarh(aes(xmin=lower, xmax=upper, y=epiyear), height=.3) + 
        geom_point(aes(x=median, y=epiyear), size=.75) +
        geom_blank(data=limits, aes(x=min)) + 
        geom_blank(data=limits, aes(x=max)) + 
        facet_wrap(~variable, ncol=2, scales="free_x", labeller=onsetOffsetLabeller) +
        scale_y_continuous(breaks=seq(1990, 2020, by=5)) +
        scale_x_continuous(breaks=seq(0, 52, 2), minor_breaks=seq(1, 52)) + 
        annotation_custom(monthGrob(4), ymin=monthBarY, ymax=monthBarY, xmin=monthBoundaries$mid[4], xmax=monthBoundaries$mid[4]) + 
        annotation_custom(monthGrob(5), ymin=monthBarY, ymax=monthBarY, xmin=monthBoundaries$mid[5], xmax=monthBoundaries$mid[5]) + 
        annotation_custom(monthGrob(9), ymin=monthBarY, ymax=monthBarY, xmin=monthBoundaries$mid[9], xmax=monthBoundaries$mid[9]) + 
        annotation_custom(monthGrob(10), ymin=monthBarY, ymax=monthBarY, xmin=monthBoundaries$mid[10], xmax=monthBoundaries$mid[10]) + 
        labs(x=NULL) + 
        theme(
            panel.grid.major.x=element_blank(),
            panel.grid.minor.x=element_line(size=rel(2)),
            axis.title.y=element_blank()
        )
        
  	plotGrob = ggplotGrob(plot)
  	plotGrob$layout$clip[grepl("panel", plotGrob$layout$name)] <- "off"
  	grid.draw(plotGrob)
    
    dev.off()
@
