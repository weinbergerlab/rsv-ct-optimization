stages:
  - docker.pre
  - knitr
  - tex
  
variables:
  TEX_DIR: "Paper"
  TEX_OUTPUT_DIR: "Paper/build"
  KNITR_CACHE_DIR: "Paper/.cache/knitr"

knitr:
  stage: knitr
  tags:
    - docker-mem:2
  image: registry.gitlab.com/airbornemint/rsv-ct-optimization/commit/default:rev-${CI_COMMIT_SHORT_SHA}
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - "${KNITR_CACHE_DIR}"
  script:
    - printenv DATASET_PASSWORD | gpg --batch --passphrase-fd 0 -o "ct rsv time series.csv" --decrypt "ct rsv time series.csv.gpg"
    - cd "${CI_PROJECT_DIR}/${TEX_DIR}"
    - Rscript -e "knitr::opts_chunk\$set(cache.path='${CI_PROJECT_DIR}/${KNITR_CACHE_DIR}/'); knitr::knit('RSVOptimization.rnw')"
  artifacts:
    paths:
      - "${TEX_DIR}/RSVOptimization.tex"

tex:
  stage: tex
  tags:
    - docker
  image: registry.gitlab.com/airbornemint/rsv-ct-optimization/commit/default:rev-${CI_COMMIT_SHORT_SHA}
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - "${KNITR_CACHE_DIR}"
  script:
    - cd "${CI_PROJECT_DIR}/${TEX_DIR}"
    - mkdir -p "${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}"
    - pwd
    - ls -al 
    - pdflatex -output-dir="${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}" RSVOptimization.tex
    - cd "${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}"
    - biblatex RSVOptimization
    - cd "${CI_PROJECT_DIR}/${TEX_DIR}"
    - pdflatex -output-dir="${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}" RSVOptimization.tex
    - pdflatex -output-dir="${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}" RSVOptimization.tex
  artifacts:
    paths:
      - "${TEX_OUTPUT_DIR}/RSVOptimization.pdf"

# Set up docker image for the rest of the build, keyed off commit ID
docker.pre:
  stage: docker.pre
  tags: 
    - dind-mem:2
  image: docker:dind
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375/
  script:
    - build/docker/pre build/default
