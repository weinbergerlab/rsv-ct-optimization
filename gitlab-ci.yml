stages:
  - do.docker.on
  - tex
  - do.docker.off
  
variables:
  DO_DROPLET_PREFIX: gitlab-rsv-ct-optimization


paper:
  stage: tex
  tags:
    - docker
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - "${KNITR_CACHE_DIR}"
  variables:
    TEX_DIR: "Paper"
    TEX_OUTPUT_DIR: "Paper/build"
    KNITR_CACHE_DIR: "Paper/build/cache/knitr"
  script:
    - export DOCKER_IMAGE_ID=`build/docker/run build/default "${TEX_DIR}"`
    - export DOCKER_IMAGE_ID="${DOCKER_IMAGE_ID:?Docker did not start}"
    - printenv DATASET_PASSWORD | docker exec --interactive "${DOCKER_IMAGE_ID}" gpg --batch --passphrase-fd 0 -o "ct rsv time series.csv" --decrypt "ct rsv time series.csv.gpg"
    - docker exec --interactive "${DOCKER_IMAGE_ID}" Rscript -e "knitr::opts_chunk\$set(cache.path='${KNITR_CACHE_DIR}'); knitr::knit('RSVOptimization.rnw')"
    - docker exec --interactive "${DOCKER_IMAGE_ID}" pdflatex -output-dir="${TEX_OUTPUT_DIR}" RSVOptimization.tex
    - docker exec --interactive "${DOCKER_IMAGE_ID}" --work-dir "/build${TEX_OUTPUT_DIR}" biblatex RSVOptimization
    - docker exec --interactive "${DOCKER_IMAGE_ID}" pdflatex -output-dir="${TEX_OUTPUT_DIR}" RSVOptimization.tex
    - docker exec --interactive "${DOCKER_IMAGE_ID}" pdflatex -output-dir="${TEX_OUTPUT_DIR}" RSVOptimization.tex
    - docker stop "${DOCKER_IMAGE_ID}"

do.docker.on:
  stage: do.docker.on
  tags:
    - docker.bootstrap
  image: python:3-stretch
  script:
    - pip3 install -U python-digitalocean
    - python3 bootstrap.py on

do.docker.off:
  stage: do.docker.off
  tags:
    - docker.bootstrap
  image: python:3-stretch
  when: always
  script:
    - pip3 install -U python-digitalocean
    - python3 bootstrap.py off

