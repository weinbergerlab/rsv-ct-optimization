stages:
  - digitalocean.pre
  - docker.pre
  - knitr
  - tex
  - docker.post
  - digitalocean.post
  
variables:
  DO_DROPLET_PREFIX: gitlab-rsv-ct-optimization
  TEX_DIR: "Paper"
  TEX_OUTPUT_DIR: "Paper/build"
  KNITR_CACHE_DIR: "Paper/build/cache/knitr"

knitr:
  stage: knitr
  tags:
    - docker
  image: registry.gitlab.com/airbornemint/rsv-ct-optimization/commit/default:rev-${CI_COMMIT_SHORT_SHA}
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - "${KNITR_CACHE_DIR}"
  script:
    - git lfs pull
    - printenv DATASET_PASSWORD | gpg --batch --passphrase-fd 0 -o "../ct rsv time series.csv" --decrypt "../ct rsv time series.csv.gpg"
    - cd "${CI_PROJECT_DIR}/${TEX_DIR}"
    - Rscript -e "knitr::opts_chunk\$set(cache.path='${CI_PROJECT_DIR}/${KNITR_CACHE_DIR}'); knitr::knit('RSVOptimization.rnw')"
  artifacts:
    paths:
      - "${TEX_DIR}/RSVOptimization.tex"

tex:
  stage: tex
  tags:
    - docker
  image: registry.gitlab.com/airbornemint/rsv-ct-optimization/commit/default:rev-${CI_COMMIT_SHORT_SHA}
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - "${KNITR_CACHE_DIR}"
  script:
    - cd "${CI_PROJECT_DIR}/${TEX_DIR}"
    - pdflatex -output-dir="${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}" RSVOptimization.tex
    - cd "${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}"
    - biblatex RSVOptimization
    - cd "${CI_PROJECT_DIR}/${TEX_DIR}"
    - pdflatex -output-dir="${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}" RSVOptimization.tex
    - pdflatex -output-dir="${CI_PROJECT_DIR}/${TEX_OUTPUT_DIR}" RSVOptimization.tex

# Set up docker image for the rest of the build, keyed off commit ID
.docker:
  tags: 
    - shell+docker
    
docker.pre:
  extends: .docker
  stage: docker.pre
  script:
    - build/docker/pre build/default

docker.post:
  extends: .docker
  stage: docker.post
  when: always
  script:
    - build/docker/post 

# Turn digital ocean droplet on/off
.digitalocean:
  tags:
    - docker-bootstrap
  image: python:3-stretch
  before_script:
    - pip3 install -U python-digitalocean

digitalocean.pre:
  extends: .digitalocean
  stage: digitalocean.pre
  script:
    - python3 bootstrap.py on

digitalocean.post:
  extends: .digitalocean
  stage: digitalocean.post
  when: always
  script:
    - python3 bootstrap.py off

